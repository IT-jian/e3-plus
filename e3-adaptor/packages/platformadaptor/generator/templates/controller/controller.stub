<?php

namespace $NAMESPACE_CONTROLLER$;

use $NAMESPACE_MODEL$\$MODEL_NAME$;
use Illuminate\Http\Request;
use Illuminate\Http\Response;

$DOC_CONTROLLER$
class $MODEL_NAME$Controller extends Controller
{
    $DOC_INDEX$
    public function index(Request $request)
    {
        $where = [];
$WHERE$
        $$MODEL_NAME_PLURAL_CAMEL$ = $MODEL_NAME$::where($where)
                    ->paginate($request->get('perPage', 15));

        return $$MODEL_NAME_PLURAL_CAMEL$;
    }

    $DOC_STORE$
    public function store(Request $request)
    {
        $rules = $MODEL_NAME$::$rules;
        if ($rules) {
            $this->validate($request, $rules);
        }
        $input = $request->all();

        $$MODEL_NAME_CAMEL$ = $MODEL_NAME$::create($input);

        return $this->setStatusCode(Response::HTTP_CREATED)->respond($$MODEL_NAME_CAMEL$);
    }

    $DOC_SHOW$
    public function show($id)
    {
        $$MODEL_NAME_CAMEL$ = $MODEL_NAME$::findOrFail($id);

        return $this->respond($$MODEL_NAME_CAMEL$);
    }

    $DOC_UPDATE$
    public function update(Request $request,$id)
    {
        $rules = $MODEL_NAME$::$rules;
        if ($rules) {
            $this->validate($request, $rules);
        }
        $input = $request->all();

        $$MODEL_NAME_CAMEL$ = $MODEL_NAME$::findOrFail($id);

        $$MODEL_NAME_CAMEL$->fill($input)->save();

        return $this->respond($$MODEL_NAME_CAMEL$);
    }

    $DOC_DESTROY$
    public function destroy($id)
    {
        $$MODEL_NAME_CAMEL$ = $MODEL_NAME$::findOrFail($id);

        $$MODEL_NAME_CAMEL$->delete();

        return $this->success([]);
    }

}
